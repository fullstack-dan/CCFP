import SendIcon from "@mui/icons-material/Send";
import { useEffect, useState } from "react";

function UserMessage({ message }) {
    return (
        <div className="chat chat-end">
            <div className="chat-bubble fade-up">{message}</div>
        </div>
    );
}

function ReplyMessage({ message }) {
    const [content, setContent] = useState("");
    useEffect(() => {
        const interval = setInterval(() => {
            setContent((prevContent) => {
                if (prevContent.length === message.length) {
                    clearInterval(interval);
                    return prevContent;
                }
                return message.slice(0, prevContent.length + 1);
            });
        }, 10);
        return () => clearInterval(interval);
    }, [message]);

    return (
        <div className="chat chat-start">
            <div className="chat-bubble fade-up">{content}</div>
        </div>
    );
}

function LoadingMessage() {
    return (
        <div className="chat chat-start fade-up">
            <div className="chat-bubble">
                <div class="dot-flashing"></div>
            </div>
        </div>
    );
}

const SvgIcon = () => (
    <svg
        width="1080"
        height="1080"
        viewBox="0 0 285.74999 285.75"
        version="1.1"
        id="svg5"
        className="catgpt-logo"
        xmlSpace="preserve"
        xmlns="http://www.w3.org/2000/svg"
    >
        <defs id="defs2" />
        <g id="layer1">
            <path
                style={{ fill: "#000000", strokeWidth: "0.264583" }}
                d="m 42.924433,233.42444 v -2.38125 h -2.248958 -2.248958 v -2.24896 -2.24896 H 36.177558 33.9286 v -6.87917 -6.87916 h 2.248958 2.248959 v -2.24896 -2.24896 h 2.248958 2.248958 v -2.24896 -2.24896 h 9.128125 9.128125 v 2.24896 2.24896 h 2.248959 2.248958 v 2.24896 2.24896 h -4.497917 -4.497916 v -2.24896 -2.24896 H 52.052558 47.42235 v 2.24896 2.24896 h -2.248958 -2.248959 v 6.87916 6.87917 h 2.238659 2.238655 l 0.07645,2.3151 0.07645,2.31511 h 4.497916 4.497917 l 0.07645,-2.31511 0.07645,-2.3151 h 4.487614 4.487616 v 2.24896 2.24896 h -2.248958 -2.248959 v 2.38125 2.38125 h -9.128125 -9.128125 z m 32.014584,0.002 v -2.38363 H 72.690058 70.4411 v -2.24896 -2.24896 h 2.248958 2.248959 v -2.24896 -2.24896 h 9.128125 9.128125 v -2.24896 -2.24895 h -9.128125 -9.128125 v -2.38125 -2.38125 H 86.3058 97.67258 l 0.07645,2.3151 0.07645,2.3151 2.31856,0.0765 2.31856,0.0765 -0.0696,9.05162 -0.0696,9.05163 -13.692191,0.0685 -13.692187,0.0685 z m 18.25625,-4.5003 v -2.38125 H 86.3161 79.436933 v 2.20486 c 0,1.21267 0.07937,2.28424 0.17639,2.38125 0.09701,0.097 3.192637,0.17639 6.879167,0.17639 h 6.702777 z m 27.516663,-2.24896 v -9.12812 h -4.6302 -4.63021 v -2.38125 -2.38125 h 4.63021 4.6302 v -4.49792 -4.49792 h 4.49792 4.49792 v 4.49167 4.49167 l 4.56406,0.0724 4.56406,0.0724 v 2.24896 2.24895 l -4.56406,0.0724 -4.56406,0.0724 v 9.12188 9.12188 h -4.49792 -4.49792 z m 31.95874,6.81302 -0.0764,-2.3151 -2.31511,-0.0764 -2.3151,-0.0764 v -2.23865 -2.23866 h -2.24896 -2.24896 v -6.87917 -6.87916 h 2.24896 2.24896 v -2.24896 -2.24896 h 2.38125 2.38125 v -2.24896 -2.24896 h 11.37708 11.37708 v 2.24896 2.24896 h -9.12812 -9.12813 v 2.23866 2.23865 l -2.3151,0.0764 -2.3151,0.0764 -0.0706,6.81302 -0.0706,6.81302 h 2.38572 2.38571 v 2.38125 2.38125 h 4.49792 4.49792 v -4.63021 -4.63021 h -2.24896 -2.24896 v -2.24896 -2.24895 h 6.87917 6.87916 v 9.12812 9.12813 H 164.1139 152.74712 Z m 27.48432,2.13872 c -0.097,-0.097 -0.17639,-7.3003 -0.17639,-16.0073 v -15.8309 h 13.75833 13.75834 v 2.24896 2.24896 h 2.24896 2.24895 v 6.87917 6.87916 h -2.24895 -2.24896 v 2.24896 2.24896 h -9.12813 -9.12812 v 4.63021 4.63021 h -4.45382 c -2.4496,0 -4.5332,-0.0794 -4.63021,-0.17639 z m 22.84236,-20.46111 v -6.87917 h -6.87917 -6.87916 v 6.87917 6.87916 h 6.87916 6.87917 z m 27.25208,6.88541 v -13.76458 h -4.49791 -4.49792 v -2.24896 -2.24896 h 13.62604 13.62604 v 2.24896 2.24896 h -4.49553 -4.49554 l -0.0685,13.69219 -0.0685,13.69218 -4.56406,0.0724 -4.56407,0.0724 z M 123.09318,193.34006 v -2.24896 h 25.26771 25.26771 v -2.24896 -2.24895 h 9.39271 9.70915 v 2.24895 2.24896 h -9.70915 -9.39271 v 2.24896 2.24896 h -25.26771 -25.26771 z m -28.310413,-4.49792 v -2.24895 h 14.022913 14.02292 v 2.24895 2.24896 H 108.80568 94.782767 Z m -9.260417,-4.7625 v -2.24895 H 83.1411 80.75985 v -2.38125 -2.38125 h -2.220518 -2.220518 l -0.192898,-4.63021 -0.192894,-4.63021 h -2.216796 -2.216793 v -2.24896 -2.24896 h -2.38125 -2.38125 v -4.63021 -4.6302 h -2.38125 -2.38125 v -4.63021 -4.63021 h -2.38125 -2.38125 v -4.89479 -4.89479 h -2.38125 -2.38125 v -11.2448 -11.24479 h 2.38125 2.38125 v -2.38125 -2.38125 h 2.38125 2.38125 v -4.63021 -4.630205 h 2.38125 2.38125 v -2.248958 -2.248959 h 2.38125 2.38125 v -4.7625 -4.7625 h 2.217664 2.217666 l 0.187335,-2.248958 0.187339,-2.248958 h 2.214906 2.214904 l 0.07645,-2.315104 0.07645,-2.315105 2.315104,-0.07645 2.315104,-0.07645 v -4.619906 -4.619908 h 2.248958 2.248959 v -2.248958 -2.248959 h 2.38125 2.38125 v -2.38125 -2.38125 H 90.152558 85.52235 V 54.43381 52.184852 h -9.392708 -9.392709 v -2.38125 -2.38125 h -4.7625 -4.7625 v 2.38125 2.38125 h 2.20934 2.209337 l 0.171913,2.421895 c 0.09455,1.332045 0.17191,3.415639 0.17191,4.630208 v 2.208313 h 2.209742 2.209745 l 0.17141,2.182813 c 0.09428,1.200547 0.103407,4.296172 0.02029,6.879167 l -0.15112,4.696354 h 2.400176 2.400175 v 4.630208 4.630208 H 68.985897 66.736939 V 82.21506 79.966102 h -2.38125 -2.38125 v -7.011459 -7.011458 h -2.38125 -2.38125 v -4.630208 -4.630209 h -2.38125 -2.38125 v -6.879166 -6.879167 h 9.392708 9.392708 v 2.245617 2.245616 l 9.458855,0.06949 9.458854,0.06949 0.07645,2.315105 0.07645,2.315104 h 4.619906 4.619908 v 2.248958 2.248958 h 9.392712 9.39271 V 54.43381 52.184852 h 25.4 25.4 v 2.248958 2.248958 h 11.64167 11.64166 v 2.38125 2.38125 h 2.38125 2.38125 v 2.248959 2.248958 h 2.38125 2.38125 v 4.630208 4.630209 h 2.38125 2.38125 v 2.38125 2.38125 h 2.38125 2.38125 v 2.238658 2.238655 l 2.31511,0.07645 2.3151,0.07645 0.0722,4.696354 0.0722,4.696354 h 2.24285 2.24286 v 2.248959 2.248958 h 2.38125 2.38125 v 4.6302 4.63021 h 2.38125 2.38125 v 2.38125 2.38125 h 2.21013 2.21013 l 0.16767,2.97656 c 0.22257,3.95088 0.22619,11.31179 0.008,16.13959 l -0.17642,3.9026 h -2.20348 -2.20347 l -0.0724,4.56406 -0.0724,4.56407 -2.30889,0.0763 -2.3089,0.0764 -0.0724,4.55385 -0.0724,4.55385 -2.3151,0.0765 -2.31511,0.0764 v 4.6199 4.61991 h -2.24895 -2.24896 v 2.24896 2.24896 h -2.38125 -2.38125 v 4.63021 4.63021 h -2.38125 -2.38125 v 2.38125 2.38125 h -2.38125 -2.38125 v 2.24895 2.47499 h -2.24896 l -4.73527,1e-5 -2.12466,-2.42978 4.20412,-2.29416 h 2.65581 2.24896 v -4.63021 -4.63021 h 2.38125 2.38125 v -4.63021 -4.63021 h 2.38125 2.38125 v -2.38125 -2.38125 h 2.24271 2.24271 l 0.0724,-4.56406 0.0724,-4.56407 2.30889,-0.0764 2.3089,-0.0764 0.0724,-4.55385 0.0724,-4.55385 2.3151,-0.0764 2.3151,-0.0764 v -4.61991 -4.61991 h 2.38125 2.38125 v -6.87916 -6.87917 h -2.38125 -2.38125 v -2.38125 -2.38125 h -2.38125 -2.38125 v -4.63021 -4.63021 h -2.38125 -2.38125 v -2.24896 -2.24895 h -2.24895 -2.24896 v -4.630208 -4.630209 h -2.38125 -2.38125 v -2.38125 -2.38125 H 204.32025 201.939 V 82.21506 79.966102 h -2.24896 -2.24896 l -0.0362,-1.785938 c -0.0199,-0.982265 -0.007,-3.065859 0.0286,-4.630208 l 0.0647,-2.844271 h -2.40982 -2.40982 v -2.38125 -2.38125 h -2.38125 -2.38125 v -2.248958 -2.248959 h -9.39271 -9.39271 v -2.38125 -2.38125 h -25.4 -25.4 v 2.38125 2.38125 h -9.3927 -9.392717 v 2.248959 2.248958 h -2.38125 -2.38125 v 2.38125 2.38125 h -2.242712 -2.242709 l -0.0724,4.564063 -0.07239,4.564062 -2.315104,0.07645 -2.315104,0.07645 v 2.238655 2.238658 H 83.1411 80.75985 v 2.38125 2.38125 H 78.3786 75.99735 v 4.630209 4.630208 H 73.6161 71.23485 v 2.24895 2.24896 h -2.220518 -2.220518 l -0.192487,4.62037 -0.192487,4.62037 -2.283349,0.076 -2.283349,0.076 -0.07645,2.3151 -0.07645,2.31511 h -2.238655 -2.238659 v 6.74687 6.74688 h 2.223498 2.223497 l 0.182907,2.71198 c 0.100597,1.49159 0.141819,3.63499 0.09161,4.76311 l -0.0913,2.05114 2.277062,-5.3e-4 2.277065,-5.3e-4 0.161878,2.05052 c 0.08903,1.12779 0.135916,3.27098 0.104187,4.76264 l -0.05769,2.71211 2.315104,-1.3e-4 2.315104,-1.4e-4 v 4.49792 4.49792 h 2.38125 2.38125 v 2.38125 2.38125 h 2.38125 2.38125 v 4.6302 4.63021 h 2.38125 2.38125 v 4.63021 4.63021 h 4.630208 4.630209 v 2.24896 2.24896 H 90.152558 85.52235 v -2.24896 z m 107.15625,0 v -2.24895 h 2.24896 2.24896 v 2.24895 2.47499 h -2.24896 -2.24896 z m -59.26667,-9.12812 v -2.38125 h 11.2448 11.24479 v 2.38125 2.38125 h -11.24479 -11.2448 z m -15.08125,-4.63021 v -2.24896 h 7.40834 7.40833 v 2.24896 2.24896 h -7.40833 -7.40834 z m 37.83542,0 v -2.24896 h 7.01146 7.01146 v 2.24896 2.24896 h -7.01146 -7.01146 z m -47.24645,-2.59818 c -0.0764,-0.19897 -0.10346,-1.24359 -0.0603,-2.32137 l 0.0786,-1.95962 h 4.6302 4.63021 v 2.24896 2.24896 l -4.56996,0.0724 c -3.67102,0.0582 -4.59726,0.001 -4.70878,-0.28935 z m 61.38334,0 c -0.0764,-0.19897 -0.10347,-1.24359 -0.0602,-2.32137 l 0.0786,-1.95962 h 4.63021 4.63021 v 2.24896 2.24896 l -4.56996,0.0724 c -3.67102,0.0582 -4.59727,0.001 -4.70878,-0.28935 z m -66.25981,-6.66224 v -2.24895 h 2.38125 2.38125 v 2.24895 2.24896 h -2.38125 -2.38125 z m 75.67084,-0.13229 v -2.38125 h -7.01146 -7.01146 v -2.24896 -2.24895 h 7.01146 7.01146 v 2.24895 2.24896 h 2.24896 2.24895 v 2.38125 2.38125 h -2.24895 -2.24896 z m -70.79678,-2.47215 c -0.075,-0.19553 -0.10105,-1.23732 -0.0578,-2.31511 l 0.0786,-1.95961 6.94531,-0.0705 6.94531,-0.0705 v -2.24457 -2.24456 l 8.7974,-0.0206 c 4.83856,-0.0113 10.58333,-0.0257 12.76614,-0.032 2.18281,-0.006 7.80852,0.003 12.50156,0.0206 l 8.53282,0.032 v 2.24896 2.24896 H 144.12756 122.8286 v 2.38125 2.38125 h -6.88747 c -5.52176,0 -6.91452,-0.0705 -7.02389,-0.35549 z m 23.70094,-16.04868 v -2.38125 h 11.64167 11.64167 v -6.74688 -6.74687 H 144.12756 132.3536 v 6.74687 6.74688 h -2.24896 -2.24896 v -4.63021 -4.63021 h -4.7625 -4.7625 v 2.38125 2.38125 H 101.92652 85.52235 v -2.38125 -2.38125 H 83.1411 80.75985 v -2.24896 -2.24895 h -2.248958 -2.248959 v -2.24896 -2.24896 h 2.248959 2.248958 v -2.38125 -2.38125 h 2.21434 2.214341 l 0.163996,-0.99219 c 0.0902,-0.5457 0.165309,-1.55773 0.16691,-2.24896 l 0.0029,-1.25677 h 2.248958 2.248959 v -2.38125 -2.38125 h 2.38125 2.38125 v -2.24896 -2.24895 h 12.170836 12.17083 v 2.24895 2.24896 h 4.23334 4.23333 v 2.24896 2.24896 h 2.38125 2.38125 v 4.7625 4.7625 h 11.77396 11.77396 v -4.49792 -4.49791 h 2.38125 2.38125 v -2.38125 -2.38125 h 4.7625 4.7625 v -2.38401 -2.384 l 11.70781,0.0689 11.70781,0.0689 0.0765,2.3151 0.0764,2.31511 h 2.22835 2.22836 l 0.0764,2.3151 0.0764,2.3151 2.31511,0.0765 2.3151,0.0764 v 2.10636 2.10637 h 2.38125 2.38125 v 2.38125 2.38125 h 2.38125 2.38125 v 2.24896 2.24896 h -2.38125 -2.38125 v 2.24895 2.24896 h -2.2181 c -2.57509,0 -2.53467,-0.0474 -2.54079,2.97656 l -0.004,1.78594 h -16.40417 -16.40416 v -2.38125 -2.38125 h 14.15521 14.1552 v -2.24896 -2.24895 h 2.38125 2.38125 v -2.38125 -2.38125 h -2.38125 -2.38125 v -2.11667 -2.11667 h -2.38125 -2.38125 v -2.38125 -2.38125 h -2.38125 -2.38125 v -2.24896 -2.24895 h -7.14375 -7.14375 v 2.24285 2.24285 l -4.69635,0.0722 -4.69635,0.0722 -0.0764,2.31511 -0.0764,2.3151 h -2.23866 -2.23865 v 4.49792 4.49792 h 4.63021 4.6302 v 2.24895 2.24896 h -4.6302 -4.63021 v 4.63021 4.63021 h -2.38125 -2.38125 v 2.38125 2.38125 h -11.64167 -11.64167 z m -14.2875,-13.89063 v -2.24895 h 4.7625 4.7625 v -4.63021 -4.63021 h -2.38125 -2.38125 v -2.38125 -2.38125 h -4.23333 -4.23333 v -2.24896 -2.24896 h -7.54063 -7.540623 v 2.24896 2.24896 h -2.38125 -2.38125 v 2.38125 2.38125 h -2.38125 -2.38125 v 2.24896 2.24896 H 87.771308 85.52235 v 2.38125 2.38125 h 2.248958 2.248959 v 2.24895 2.24896 h 14.155213 14.1552 z m 97.89584,-48.68333 v -4.630208 h 2.38125 2.38125 v -6.879167 -6.879167 h 2.38125 2.38125 V 56.81506 52.184852 h 2.24896 2.24895 v -2.38125 -2.38125 h -4.59559 -4.59559 l -0.16399,0.992187 c -0.0902,0.545703 -0.16531,1.617266 -0.16691,2.38125 l -0.003,1.389063 h -9.3927 -9.39271 v 2.248958 2.248958 h -4.63021 -4.63021 V 54.43381 52.184852 h 2.38125 2.38125 v -2.38125 -2.38125 h 9.39271 9.39271 v -2.248959 -2.248958 h 9.26041 9.26042 l 0.0325,1.521354 c 0.0286,1.33781 0.0231,4.204536 -0.0202,10.451042 l -0.0123,1.785937 h -2.24896 -2.24896 v 4.630209 4.630208 h -2.38125 -2.38125 v 7.011458 7.011459 h -2.38125 -2.38125 v 2.248958 2.248958 h -2.24895 -2.24896 z"
                id="path209"
            />
        </g>
    </svg>
);

export default function ChatWindow() {
    //array of message objects with info about the sender and the message
    const [messages, setMessages] = useState([
        {
            message:
                "Hello there! I am CatGPT, part of the Feline Learning Interface for Computer Science, or FeLICS for short. I can answer questions you might have about Western Carolina University's Computer Science program. How can I help you today?",
            type: "reply",
        },
    ]);
    const [pendingReply, setPendingReply] = useState(false);

    const sendMessage = async () => {
        const message = document.querySelector("#user-input").value;
        document.querySelector("#user-input").value = "";
        const messageObject = {
            message,
            type: "user",
        };

        // Add user's message immediately
        setMessages((prevMessages) => [...prevMessages, messageObject]);
        setPendingReply(true);

        let replyObject;

        try {
            const res = await fetch("http://localhost:5000/api/dialogflow", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ text: message }),
            });
            const data = await res.json();
            replyObject = {
                message: data.reply,
                type: "reply",
            };
        } catch (error) {
            console.error("Error:", error);
            replyObject = {
                message:
                    "I'm sorry, I'm having trouble understanding you right now. Please try again later.",
                type: "reply",
            };
        }

        // Add the bot's reply when it arrives
        setMessages((prevMessages) => [...prevMessages, replyObject]);
        setPendingReply(false);
    };

    useEffect(() => {
        const chatWindow = document.querySelector("#chat-window");
        chatWindow.scrollTop = chatWindow.scrollHeight;
    }, [messages]);

    const handleKeyPress = (event) => {
        if (event.key === "Enter") {
            sendMessage();
        }
    };

    return (
        <>
            <div
                className="h-5/6 flex flex-col max-w-3xl px-8 w-full"
                id="chat-window-cont"
            >
                <div
                    className="flex flex-col mt-auto overflow-x-scroll gap-2"
                    id="chat-window"
                >
                    {messages.map((messageObject, index) => {
                        if (messageObject.type === "user") {
                            return (
                                <UserMessage
                                    key={index}
                                    message={messageObject.message}
                                />
                            );
                        } else {
                            return (
                                <ReplyMessage
                                    key={index}
                                    message={messageObject.message}
                                />
                            );
                        }
                    })}
                    {pendingReply && <LoadingMessage />}
                </div>
                <div className="flex w-full gap-4 mt-8">
                    <input
                        id="user-input"
                        type="text"
                        placeholder="Type here"
                        className="input input-bordered w-full max-w-full"
                        onKeyPress={handleKeyPress}
                    />
                    <button className="btn btn-ghost" onClick={sendMessage}>
                        <SendIcon />
                    </button>
                </div>
                <SvgIcon />
            </div>
        </>
    );
}
